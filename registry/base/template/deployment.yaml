apiVersion: apps/v1
kind: Deployment
metadata:
  name: registry
  namespace: registry
  labels:
    app.kubernetes.io/name: registry
  annotations:
    prometheus.io/path: "/metrics"
    prometheus.io/scrape: "true"
    prometheus.io/port: "5001"
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: registry
  template:
    metadata:
      labels:
        app.kubernetes.io/name: registry
      annotations:
        egress.coil.cybozu.com/internet-egress: nat
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app.kubernetes.io/name
                    operator: In
                    values:
                      - registry
              topologyKey: cke.cybozu.com/rack
      securityContext:
        fsGroup: 10000
        runAsUser: 10000
      containers:
        - image: quay.io/cybozu/registry:latest
          name: registry
          command:
          - /bin/registry
          - serve
          - /etc/docker/registry/config.yml
          resources:
            requests:
              cpu: 100m
              memory: 512Mi
          ports:
            - containerPort: 5000
          volumeMounts:
            - name: registry-config
              mountPath: "/etc/docker/registry"
          env:
            - name: REGISTRY_STORAGE_S3_REGIONENDPOINT
              value: $(BUCKET_HOST)
            - name: REGISTRY_STORAGE_S3_BUCKET
              value: $(BUCKET_NAME)
            - name: REGISTRY_STORAGE_S3_ACCESSKEY
              value: $(AWS_ACCESS_KEY_ID)
            - name: REGISTRY_STORAGE_S3_SECRETKEY
              value: $(AWS_SECRET_ACCESS_KEY)
          livenessProbe:
            httpGet:
              port: 5000
              path: /
          readinessProbe:
            httpGet:
              port: 5000
              path: /
      volumes:
        - name: registry-config
          configMap:
            name: registry-config

